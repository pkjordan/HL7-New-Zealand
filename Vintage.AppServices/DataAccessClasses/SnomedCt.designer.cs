#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vintage.AppServices.DataAccessClasses
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SNOMED_CT")]
	public partial class SnomedCtDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public SnomedCtDataContext() : 
				base(global::Vintage.AppServices.Properties.Settings.Default.SNOMED_CTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SnomedCtDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SnomedCtDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SnomedCtDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SnomedCtDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllSubsumedConcepts", IsComposable=true)]
		public IQueryable<GetAllSubsumedConceptsResult> GetAllSubsumedConcepts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptCode", DbType="Char(20)")] string conceptCode)
		{
			return this.CreateMethodCallQuery<GetAllSubsumedConceptsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conceptCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllSubTypeConcepts", IsComposable=true)]
		public IQueryable<GetAllSubTypeConceptsResult> GetAllSubTypeConcepts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperTypeCode", DbType="Char(20)")] string superTypeCode)
		{
			return this.CreateMethodCallQuery<GetAllSubTypeConceptsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), superTypeCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDescriptionByLoincCode", IsComposable=true)]
		public IQueryable<GetDescriptionByLoincCodeResult> GetDescriptionByLoincCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoincCode", DbType="Char(20)")] string loincCode)
		{
			return this.CreateMethodCallQuery<GetDescriptionByLoincCodeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loincCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDescriptionsByLoincTerm", IsComposable=true)]
		public IQueryable<GetDescriptionsByLoincTermResult> GetDescriptionsByLoincTerm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Term", DbType="VarChar(255)")] string term)
		{
			return this.CreateMethodCallQuery<GetDescriptionsByLoincTermResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), term);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDescriptionByLoincProperty", IsComposable=true)]
		public IQueryable<GetDescriptionByLoincPropertyResult> GetDescriptionByLoincProperty([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoincProperty", DbType="Char(10)")] string loincProperty, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoincValue", DbType="NVarChar(100)")] string loincValue)
		{
			return this.CreateMethodCallQuery<GetDescriptionByLoincPropertyResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loincProperty, loincValue);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetChildConcepts", IsComposable=true)]
		public IQueryable<GetChildConceptsResult> GetChildConcepts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptCode", DbType="Char(20)")] string conceptCode)
		{
			return this.CreateMethodCallQuery<GetChildConceptsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conceptCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetParentConcepts", IsComposable=true)]
		public IQueryable<GetParentConceptsResult> GetParentConcepts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptCode", DbType="Char(20)")] string conceptCode)
		{
			return this.CreateMethodCallQuery<GetParentConceptsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conceptCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetConceptByCode", IsComposable=true)]
		public IQueryable<GetConceptByCodeResult> GetConceptByCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptCode", DbType="Char(20)")] string conceptCode)
		{
			return this.CreateMethodCallQuery<GetConceptByCodeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conceptCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetProximalPrimitives", IsComposable=true)]
		public IQueryable<GetProximalPrimitivesResult> GetProximalPrimitives([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptCode", DbType="Char(20)")] string conceptCode)
		{
			return this.CreateMethodCallQuery<GetProximalPrimitivesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conceptCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetConceptPropertiesByCode", IsComposable=true)]
		public IQueryable<GetConceptPropertiesByCodeResult> GetConceptPropertiesByCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptCode", DbType="Char(20)")] string conceptCode)
		{
			return this.CreateMethodCallQuery<GetConceptPropertiesByCodeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conceptCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCompositionMatch", IsComposable=true)]
		public IQueryable<GetCompositionMatchResult> GetCompositionMatch(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType3, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue3, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType4, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue4, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType5, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue5, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType6, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue6, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType7, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue7, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType8, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue8, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType9, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue9, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType10, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue10, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType11, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue11, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType12, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue12, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType13, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue13, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType14, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue14, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType15, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue15, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType16, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue16, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType17, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue17, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType18, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue18, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType19, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue19, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType20, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue20, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attType21, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string attValue21, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string pp1, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string pp2, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string pp3, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string pp4, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(20)")] string pp5, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> attCount)
		{
			return this.CreateMethodCallQuery<GetCompositionMatchResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attType1, attValue1, attType2, attValue2, attType3, attValue3, attType4, attValue4, attType5, attValue5, attType6, attValue6, attType7, attValue7, attType8, attValue8, attType9, attValue9, attType10, attValue10, attType11, attValue11, attType12, attValue12, attType13, attValue13, attType14, attValue14, attType15, attValue15, attType16, attValue16, attType17, attValue17, attType18, attValue18, attType19, attValue19, attType20, attValue20, attType21, attValue21, pp1, pp2, pp3, pp4, pp5, attCount);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClientClosure_Insert")]
		public int ClientClosure_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodeSystemId", DbType="VarChar(100)")] string codeSystemId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodeSystemVersion", DbType="Char(10)")] string codeSystemVersion)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, codeSystemId, codeSystemVersion);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClientClosure_Update")]
		public int ClientClosure_Update([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Concepts", DbType="NVarChar(MAX)")] string concepts, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodeSystemId", DbType="VarChar(100)")] string codeSystemId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CodeSystemVersion", DbType="Char(10)")] string codeSystemVersion)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, concepts, codeSystemId, codeSystemVersion);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllSuperTypeConcepts", IsComposable=true)]
		public IQueryable<GetAllSuperTypeConceptsResult> GetAllSuperTypeConcepts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubTypeCode", DbType="Char(20)")] string subTypeCode)
		{
			return this.CreateMethodCallQuery<GetAllSuperTypeConceptsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subTypeCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllAttributesByCode", IsComposable=true)]
		public IQueryable<GetAllAttributesByCodeResult> GetAllAttributesByCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="Char(20)")] string code)
		{
			return this.CreateMethodCallQuery<GetAllAttributesByCodeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), code);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetClientClosures", IsComposable=true)]
		public IQueryable<GetClientClosuresResult> GetClientClosures([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Version", DbType="SmallInt")] System.Nullable<short> version)
		{
			return this.CreateMethodCallQuery<GetClientClosuresResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, version);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsSubsumedBy", IsComposable=true)]
		public System.Nullable<bool> IsSubsumedBy([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SubTypeCode", DbType="Char(20)")] string subTypeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperTypeCode", DbType="Char(20)")] string superTypeCode)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), subTypeCode, superTypeCode).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHealthcareOrganisations", IsComposable=true)]
		public IQueryable<GetHealthcareOrganisationsResult> GetHealthcareOrganisations([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrganisationHPI", DbType="Char(10)")] string organisationHPI, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrganisationName", DbType="NVarChar(255)")] string organisationName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrganisationAddress", DbType="NVarChar(255)")] string organisationAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrganisationType", DbType="Char(20)")] string organisationType)
		{
			return this.CreateMethodCallQuery<GetHealthcareOrganisationsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), organisationHPI, organisationName, organisationAddress, organisationType);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHealthcareFacilities", IsComposable=true)]
		public IQueryable<GetHealthcareFacilitiesResult> GetHealthcareFacilities([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityHPI", DbType="Char(10)")] string facilityHPI, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityName", DbType="NVarChar(255)")] string facilityName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityAddress", DbType="NVarChar(255)")] string facilityAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FacilityTypeName", DbType="NVarChar(100)")] string facilityTypeName)
		{
			return this.CreateMethodCallQuery<GetHealthcareFacilitiesResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), facilityHPI, facilityName, facilityAddress, facilityTypeName);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetConceptsByAttributeValuePair", IsComposable=true)]
		public IQueryable<GetConceptsByAttributeValuePairResult> GetConceptsByAttributeValuePair([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeID", DbType="Char(20)")] string attributeTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeValueID", DbType="Char(20)")] string attributeValueID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeAncestors", DbType="Bit")] System.Nullable<bool> attributeTypeAncestors, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeDescendants", DbType="Bit")] System.Nullable<bool> attributeTypeDescendants, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeValueAncestors", DbType="Bit")] System.Nullable<bool> attributeValueAncestors, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeValueDescendants", DbType="Bit")] System.Nullable<bool> attributeValueDescendants)
		{
			return this.CreateMethodCallQuery<GetConceptsByAttributeValuePairResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attributeTypeID, attributeValueID, attributeTypeAncestors, attributeTypeDescendants, attributeValueAncestors, attributeValueDescendants);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetConceptsByAttributeValuePairReverse", IsComposable=true)]
		public IQueryable<GetConceptsByAttributeValuePairReverseResult> GetConceptsByAttributeValuePairReverse([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeID", DbType="Char(20)")] string attributeTypeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeValueID", DbType="Char(20)")] string attributeValueID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeAncestors", DbType="Bit")] System.Nullable<bool> attributeTypeAncestors, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeDescendants", DbType="Bit")] System.Nullable<bool> attributeTypeDescendants, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeValueAncestors", DbType="Bit")] System.Nullable<bool> attributeValueAncestors, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeValueDescendants", DbType="Bit")] System.Nullable<bool> attributeValueDescendants)
		{
			return this.CreateMethodCallQuery<GetConceptsByAttributeValuePairReverseResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attributeTypeID, attributeValueID, attributeTypeAncestors, attributeTypeDescendants, attributeValueAncestors, attributeValueDescendants);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRefSet_NZ", IsComposable=true)]
		public IQueryable<GetRefSet_NZResult> GetRefSet_NZ([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefSetCode", DbType="Char(20)")] string refSetCode)
		{
			return this.CreateMethodCallQuery<GetRefSet_NZResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), refSetCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAttributesByFocusTypeValue", IsComposable=true)]
		public IQueryable<GetAttributesByFocusTypeValueResult> GetAttributesByFocusTypeValue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="FocusConceptCode", DbType="Char(20)")] string focusConceptCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FocusTypeDescendants", DbType="Bit")] System.Nullable<bool> focusTypeDescendants, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeCode", DbType="Char(20)")] string attributeTypeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeTypeDescendants", DbType="Bit")] System.Nullable<bool> attributeTypeDescendants, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AttributeValueCode", DbType="Char(20)")] string attributeValueCode)
		{
			return this.CreateMethodCallQuery<GetAttributesByFocusTypeValueResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), focusConceptCode, focusTypeDescendants, attributeTypeCode, attributeTypeDescendants, attributeValueCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNzReferenceSets", IsComposable=true)]
		public IQueryable<GetNzReferenceSetsResult> GetNzReferenceSets()
		{
			return this.CreateMethodCallQuery<GetNzReferenceSetsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetConceptMap_NZ", IsComposable=true)]
		public IQueryable<GetConceptMap_NZResult> GetConceptMap_NZ([global::System.Data.Linq.Mapping.ParameterAttribute(Name="RefSetId", DbType="Char(20)")] string refSetId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptId", DbType="Char(20)")] string conceptId)
		{
			return this.CreateMethodCallQuery<GetConceptMap_NZResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), refSetId, conceptId);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetConceptDesignationsByCode", IsComposable=true)]
		public IQueryable<GetConceptDesignationsByCodeResult> GetConceptDesignationsByCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ConceptCode", DbType="Char(20)")] string conceptCode)
		{
			return this.CreateMethodCallQuery<GetConceptDesignationsByCodeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), conceptCode);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDescriptionsFromHierarchyByTerm", IsComposable=true)]
		public IQueryable<GetDescriptionsFromHierarchyByTermResult> GetDescriptionsFromHierarchyByTerm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SuperTypeCode", DbType="Char(20)")] string superTypeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Term", DbType="NVarChar(4000)")] string term)
		{
			return this.CreateMethodCallQuery<GetDescriptionsFromHierarchyByTermResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), superTypeCode, term);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDescriptionsByTerm", IsComposable=true)]
		public IQueryable<GetDescriptionsByTermResult> GetDescriptionsByTerm([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Term", DbType="NVarChar(4000)")] string term)
		{
			return this.CreateMethodCallQuery<GetDescriptionsByTermResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), term);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPropertiesByLoincCode", IsComposable=true)]
		public IQueryable<GetPropertiesByLoincCodeResult> GetPropertiesByLoincCode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoincCode", DbType="Char(20)")] string loincCode)
		{
			return this.CreateMethodCallQuery<GetPropertiesByLoincCodeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loincCode);
		}
	}
	
	public partial class GetAllSubsumedConceptsResult
	{
		
		private string _ConceptID;
		
		private string _Term;
		
		public GetAllSubsumedConceptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="Char(20)")]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this._ConceptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
	}
	
	public partial class GetAllSubTypeConceptsResult
	{
		
		private string _subType;
		
		private string _Term;
		
		public GetAllSubTypeConceptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subType", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string subType
		{
			get
			{
				return this._subType;
			}
			set
			{
				if ((this._subType != value))
				{
					this._subType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
	}
	
	public partial class GetDescriptionByLoincCodeResult
	{
		
		private string _id;
		
		private string _long_common_name;
		
		private string _status;
		
		public GetDescriptionByLoincCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_long_common_name", DbType="NVarChar(255)")]
		public string long_common_name
		{
			get
			{
				return this._long_common_name;
			}
			set
			{
				if ((this._long_common_name != value))
				{
					this._long_common_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class GetDescriptionsByLoincTermResult
	{
		
		private string _id;
		
		private string _long_common_name;
		
		private string _status;
		
		public GetDescriptionsByLoincTermResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_long_common_name", DbType="NVarChar(255)")]
		public string long_common_name
		{
			get
			{
				return this._long_common_name;
			}
			set
			{
				if ((this._long_common_name != value))
				{
					this._long_common_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class GetDescriptionByLoincPropertyResult
	{
		
		private string _id;
		
		private string _long_common_name;
		
		private string _status;
		
		public GetDescriptionByLoincPropertyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_long_common_name", DbType="NVarChar(255)")]
		public string long_common_name
		{
			get
			{
				return this._long_common_name;
			}
			set
			{
				if ((this._long_common_name != value))
				{
					this._long_common_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	public partial class GetChildConceptsResult
	{
		
		private string _Term;
		
		private string _ConceptID;
		
		public GetChildConceptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this._ConceptID = value;
				}
			}
		}
	}
	
	public partial class GetParentConceptsResult
	{
		
		private string _Term;
		
		private string _ConceptID;
		
		public GetParentConceptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this._ConceptID = value;
				}
			}
		}
	}
	
	public partial class GetConceptByCodeResult
	{
		
		private string _Concept_ID;
		
		private string _Term;
		
		public GetConceptByCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Concept ID]", Storage="_Concept_ID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Concept_ID
		{
			get
			{
				return this._Concept_ID;
			}
			set
			{
				if ((this._Concept_ID != value))
				{
					this._Concept_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
	}
	
	public partial class GetProximalPrimitivesResult
	{
		
		private string _conceptId;
		
		private string _term;
		
		private string _definitionStatusId;
		
		public GetProximalPrimitivesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conceptId", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string conceptId
		{
			get
			{
				return this._conceptId;
			}
			set
			{
				if ((this._conceptId != value))
				{
					this._conceptId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string term
		{
			get
			{
				return this._term;
			}
			set
			{
				if ((this._term != value))
				{
					this._term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_definitionStatusId", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string definitionStatusId
		{
			get
			{
				return this._definitionStatusId;
			}
			set
			{
				if ((this._definitionStatusId != value))
				{
					this._definitionStatusId = value;
				}
			}
		}
	}
	
	public partial class GetConceptPropertiesByCodeResult
	{
		
		private string _ConceptId;
		
		private string _effectiveTime;
		
		private bool _active;
		
		private string _moduleId;
		
		private int _Primitive;
		
		public GetConceptPropertiesByCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptId", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string ConceptId
		{
			get
			{
				return this._ConceptId;
			}
			set
			{
				if ((this._ConceptId != value))
				{
					this._ConceptId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectiveTime", DbType="Char(8) NOT NULL", CanBeNull=false)]
		public string effectiveTime
		{
			get
			{
				return this._effectiveTime;
			}
			set
			{
				if ((this._effectiveTime != value))
				{
					this._effectiveTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this._active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moduleId", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string moduleId
		{
			get
			{
				return this._moduleId;
			}
			set
			{
				if ((this._moduleId != value))
				{
					this._moduleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primitive", DbType="Int NOT NULL")]
		public int Primitive
		{
			get
			{
				return this._Primitive;
			}
			set
			{
				if ((this._Primitive != value))
				{
					this._Primitive = value;
				}
			}
		}
	}
	
	public partial class GetCompositionMatchResult
	{
		
		private string _ConceptID;
		
		private string _PreferredTerm;
		
		public GetCompositionMatchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this._ConceptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredTerm", DbType="NVarChar(MAX)")]
		public string PreferredTerm
		{
			get
			{
				return this._PreferredTerm;
			}
			set
			{
				if ((this._PreferredTerm != value))
				{
					this._PreferredTerm = value;
				}
			}
		}
	}
	
	public partial class GetAllSuperTypeConceptsResult
	{
		
		private string _superType;
		
		private string _Term;
		
		public GetAllSuperTypeConceptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_superType", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string superType
		{
			get
			{
				return this._superType;
			}
			set
			{
				if ((this._superType != value))
				{
					this._superType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
	}
	
	public partial class GetAllAttributesByCodeResult
	{
		
		private string _relationshipGroup;
		
		private string _AttributeTypeID;
		
		private string _AttributeTypeTerm;
		
		private string _AttributeValueID;
		
		private string _AttributeValueTerm;
		
		private string _DefinitionStatus;
		
		private string _AttributeValueDefinitionStatus;
		
		public GetAllAttributesByCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationshipGroup", DbType="Char(4) NOT NULL", CanBeNull=false)]
		public string relationshipGroup
		{
			get
			{
				return this._relationshipGroup;
			}
			set
			{
				if ((this._relationshipGroup != value))
				{
					this._relationshipGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string AttributeTypeID
		{
			get
			{
				return this._AttributeTypeID;
			}
			set
			{
				if ((this._AttributeTypeID != value))
				{
					this._AttributeTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeTypeTerm", DbType="NVarChar(MAX)")]
		public string AttributeTypeTerm
		{
			get
			{
				return this._AttributeTypeTerm;
			}
			set
			{
				if ((this._AttributeTypeTerm != value))
				{
					this._AttributeTypeTerm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValueID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string AttributeValueID
		{
			get
			{
				return this._AttributeValueID;
			}
			set
			{
				if ((this._AttributeValueID != value))
				{
					this._AttributeValueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValueTerm", DbType="NVarChar(MAX)")]
		public string AttributeValueTerm
		{
			get
			{
				return this._AttributeValueTerm;
			}
			set
			{
				if ((this._AttributeValueTerm != value))
				{
					this._AttributeValueTerm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefinitionStatus", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string DefinitionStatus
		{
			get
			{
				return this._DefinitionStatus;
			}
			set
			{
				if ((this._DefinitionStatus != value))
				{
					this._DefinitionStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeValueDefinitionStatus", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string AttributeValueDefinitionStatus
		{
			get
			{
				return this._AttributeValueDefinitionStatus;
			}
			set
			{
				if ((this._AttributeValueDefinitionStatus != value))
				{
					this._AttributeValueDefinitionStatus = value;
				}
			}
		}
	}
	
	public partial class GetClientClosuresResult
	{
		
		private short _Version;
		
		private string _Concepts;
		
		public GetClientClosuresResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="SmallInt NOT NULL")]
		public short Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concepts", DbType="VarChar(MAX)")]
		public string Concepts
		{
			get
			{
				return this._Concepts;
			}
			set
			{
				if ((this._Concepts != value))
				{
					this._Concepts = value;
				}
			}
		}
	}
	
	public partial class GetHealthcareOrganisationsResult
	{
		
		private string _OrganisationHPI;
		
		private string _OrganisationName;
		
		private string _OrganisationAddress;
		
		private string _OrganisationType;
		
		public GetHealthcareOrganisationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationHPI", DbType="Char(10)")]
		public string OrganisationHPI
		{
			get
			{
				return this._OrganisationHPI;
			}
			set
			{
				if ((this._OrganisationHPI != value))
				{
					this._OrganisationHPI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationName", DbType="NVarChar(255)")]
		public string OrganisationName
		{
			get
			{
				return this._OrganisationName;
			}
			set
			{
				if ((this._OrganisationName != value))
				{
					this._OrganisationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationAddress", DbType="NVarChar(255)")]
		public string OrganisationAddress
		{
			get
			{
				return this._OrganisationAddress;
			}
			set
			{
				if ((this._OrganisationAddress != value))
				{
					this._OrganisationAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationType", DbType="Char(20)")]
		public string OrganisationType
		{
			get
			{
				return this._OrganisationType;
			}
			set
			{
				if ((this._OrganisationType != value))
				{
					this._OrganisationType = value;
				}
			}
		}
	}
	
	public partial class GetHealthcareFacilitiesResult
	{
		
		private string _FacilityHPI;
		
		private string _FacilityName;
		
		private string _FacilityAddress;
		
		private string _FacilityType;
		
		private string _FacilityType_Name;
		
		private string _OrganisationHPI;
		
		public GetHealthcareFacilitiesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityHPI", DbType="Char(10)")]
		public string FacilityHPI
		{
			get
			{
				return this._FacilityHPI;
			}
			set
			{
				if ((this._FacilityHPI != value))
				{
					this._FacilityHPI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityName", DbType="NVarChar(255)")]
		public string FacilityName
		{
			get
			{
				return this._FacilityName;
			}
			set
			{
				if ((this._FacilityName != value))
				{
					this._FacilityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityAddress", DbType="NVarChar(255)")]
		public string FacilityAddress
		{
			get
			{
				return this._FacilityAddress;
			}
			set
			{
				if ((this._FacilityAddress != value))
				{
					this._FacilityAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityType", DbType="Char(5)")]
		public string FacilityType
		{
			get
			{
				return this._FacilityType;
			}
			set
			{
				if ((this._FacilityType != value))
				{
					this._FacilityType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacilityType_Name", DbType="NVarChar(100)")]
		public string FacilityType_Name
		{
			get
			{
				return this._FacilityType_Name;
			}
			set
			{
				if ((this._FacilityType_Name != value))
				{
					this._FacilityType_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganisationHPI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string OrganisationHPI
		{
			get
			{
				return this._OrganisationHPI;
			}
			set
			{
				if ((this._OrganisationHPI != value))
				{
					this._OrganisationHPI = value;
				}
			}
		}
	}
	
	public partial class GetConceptsByAttributeValuePairResult
	{
		
		private string _Concept_ID;
		
		private string _Term;
		
		public GetConceptsByAttributeValuePairResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Concept ID]", Storage="_Concept_ID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Concept_ID
		{
			get
			{
				return this._Concept_ID;
			}
			set
			{
				if ((this._Concept_ID != value))
				{
					this._Concept_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
	}
	
	public partial class GetConceptsByAttributeValuePairReverseResult
	{
		
		private string _Concept_ID;
		
		private string _Term;
		
		public GetConceptsByAttributeValuePairReverseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Concept ID]", Storage="_Concept_ID", DbType="Char(20)")]
		public string Concept_ID
		{
			get
			{
				return this._Concept_ID;
			}
			set
			{
				if ((this._Concept_ID != value))
				{
					this._Concept_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
	}
	
	public partial class GetRefSet_NZResult
	{
		
		private string _conceptId;
		
		private string _term;
		
		public GetRefSet_NZResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conceptId", DbType="Char(20)")]
		public string conceptId
		{
			get
			{
				return this._conceptId;
			}
			set
			{
				if ((this._conceptId != value))
				{
					this._conceptId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_term", DbType="NVarChar(MAX)")]
		public string term
		{
			get
			{
				return this._term;
			}
			set
			{
				if ((this._term != value))
				{
					this._term = value;
				}
			}
		}
	}
	
	public partial class GetAttributesByFocusTypeValueResult
	{
		
		private string _AssocAttributeValueID;
		
		private string _AssocAttributeValueTerm;
		
		public GetAttributesByFocusTypeValueResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssocAttributeValueID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string AssocAttributeValueID
		{
			get
			{
				return this._AssocAttributeValueID;
			}
			set
			{
				if ((this._AssocAttributeValueID != value))
				{
					this._AssocAttributeValueID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssocAttributeValueTerm", DbType="NVarChar(MAX)")]
		public string AssocAttributeValueTerm
		{
			get
			{
				return this._AssocAttributeValueTerm;
			}
			set
			{
				if ((this._AssocAttributeValueTerm != value))
				{
					this._AssocAttributeValueTerm = value;
				}
			}
		}
	}
	
	public partial class GetNzReferenceSetsResult
	{
		
		private string _Term;
		
		private string _ConceptID;
		
		public GetNzReferenceSetsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this._ConceptID = value;
				}
			}
		}
	}
	
	public partial class GetConceptMap_NZResult
	{
		
		private string _SourceCode;
		
		private string _SourceTerm;
		
		private string _TargetCode;
		
		private string _TargetTerm;
		
		public GetConceptMap_NZResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCode", DbType="Char(20)")]
		public string SourceCode
		{
			get
			{
				return this._SourceCode;
			}
			set
			{
				if ((this._SourceCode != value))
				{
					this._SourceCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTerm", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string SourceTerm
		{
			get
			{
				return this._SourceTerm;
			}
			set
			{
				if ((this._SourceTerm != value))
				{
					this._SourceTerm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetCode", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string TargetCode
		{
			get
			{
				return this._TargetCode;
			}
			set
			{
				if ((this._TargetCode != value))
				{
					this._TargetCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetTerm", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TargetTerm
		{
			get
			{
				return this._TargetTerm;
			}
			set
			{
				if ((this._TargetTerm != value))
				{
					this._TargetTerm = value;
				}
			}
		}
	}
	
	public partial class GetConceptDesignationsByCodeResult
	{
		
		private string _Concept_ID;
		
		private string _Term;
		
		private string _Designation;
		
		private string _CSI;
		
		public GetConceptDesignationsByCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Concept ID]", Storage="_Concept_ID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Concept_ID
		{
			get
			{
				return this._Concept_ID;
			}
			set
			{
				if ((this._Concept_ID != value))
				{
					this._Concept_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this._Designation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CSI", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string CSI
		{
			get
			{
				return this._CSI;
			}
			set
			{
				if ((this._CSI != value))
				{
					this._CSI = value;
				}
			}
		}
	}
	
	public partial class GetDescriptionsFromHierarchyByTermResult
	{
		
		private string _Term;
		
		private string _Type;
		
		private string _ConceptID;
		
		private System.Nullable<long> _Rank;
		
		public GetDescriptionsFromHierarchyByTermResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this._ConceptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="BigInt")]
		public System.Nullable<long> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
	}
	
	public partial class GetDescriptionsByTermResult
	{
		
		private string _Term;
		
		private string _Type;
		
		private string _ConceptID;
		
		private System.Nullable<long> _Rank;
		
		public GetDescriptionsByTermResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(MAX)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this._ConceptID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="BigInt")]
		public System.Nullable<long> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this._Rank = value;
				}
			}
		}
	}
	
	public partial class GetPropertiesByLoincCodeResult
	{
		
		private string _id;
		
		private string _status;
		
		private string _component;
		
		private string _property;
		
		private string _time_aspct;
		
		private string _system;
		
		private string _scale_typ;
		
		private string _method_typ;
		
		private string _class;
		
		private System.Nullable<int> _classtype;
		
		private string _order_obs;
		
		private string _consumer_name;
		
		public GetPropertiesByLoincCodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Char(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_component", DbType="NVarChar(255)")]
		public string component
		{
			get
			{
				return this._component;
			}
			set
			{
				if ((this._component != value))
				{
					this._component = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_property", DbType="NVarChar(30)")]
		public string property
		{
			get
			{
				return this._property;
			}
			set
			{
				if ((this._property != value))
				{
					this._property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_aspct", DbType="NVarChar(15)")]
		public string time_aspct
		{
			get
			{
				return this._time_aspct;
			}
			set
			{
				if ((this._time_aspct != value))
				{
					this._time_aspct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_system", DbType="NVarChar(100)")]
		public string system
		{
			get
			{
				return this._system;
			}
			set
			{
				if ((this._system != value))
				{
					this._system = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scale_typ", DbType="NVarChar(30)")]
		public string scale_typ
		{
			get
			{
				return this._scale_typ;
			}
			set
			{
				if ((this._scale_typ != value))
				{
					this._scale_typ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_method_typ", DbType="NVarChar(50)")]
		public string method_typ
		{
			get
			{
				return this._method_typ;
			}
			set
			{
				if ((this._method_typ != value))
				{
					this._method_typ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="NVarChar(20)")]
		public string @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this._class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classtype", DbType="Int")]
		public System.Nullable<int> classtype
		{
			get
			{
				return this._classtype;
			}
			set
			{
				if ((this._classtype != value))
				{
					this._classtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_obs", DbType="NVarChar(15)")]
		public string order_obs
		{
			get
			{
				return this._order_obs;
			}
			set
			{
				if ((this._order_obs != value))
				{
					this._order_obs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_consumer_name", DbType="NVarChar(255)")]
		public string consumer_name
		{
			get
			{
				return this._consumer_name;
			}
			set
			{
				if ((this._consumer_name != value))
				{
					this._consumer_name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
